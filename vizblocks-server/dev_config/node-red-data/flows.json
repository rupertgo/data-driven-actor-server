[{"id":"3c645eec.a8fd02","type":"tab","label":"Basic Test","disabled":false,"info":""},{"id":"d1556403.60a488","type":"mqtt-broker","name":"","broker":"broker","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"caz","birthQos":"0","birthPayload":"wiggle 100","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"userProps":"","sessionExpiry":""},{"id":"df2eee0f.97cc2","type":"mqtt out","z":"3c645eec.a8fd02","name":"","topic":"da58ff","qos":"","retain":"","respTopic":"","contentType":"","userProps":"","correl":"","expiry":"","broker":"d1556403.60a488","x":610,"y":340,"wires":[]},{"id":"3f3898ab.f871d8","type":"inject","z":"3c645eec.a8fd02","name":"","props":[{"p":"payload"}],"repeat":"","crontab":"","once":false,"onceDelay":0.1,"topic":"","payload":"goto 80","payloadType":"str","x":330,"y":180,"wires":[["df2eee0f.97cc2"]]},{"id":"badbbb3f.ee75a8","type":"comment","z":"3c645eec.a8fd02","name":"Double-click on this inject node and edit the command you'd like to send to the vizblock","info":"Double-click on this inject node and edit the command you'd like to send to the vizblock","x":550,"y":140,"wires":[]},{"id":"6a1d0448.2afb8c","type":"comment","z":"3c645eec.a8fd02","name":"Double-click on this MQTT send node and change the topic to the name of the VizBlock you want to control","info":"","x":930,"y":300,"wires":[]},{"id":"1e11ec23.db2804","type":"comment","z":"3c645eec.a8fd02","name":"CLICK ME and read instructions in the right-hand panel","info":"# Instructions\n\nThis flow lets you test the basic functionality of this remote Node-Red and MQTT server. \n\nBefore starting, check that the purple MQTT send node says `connected` beneath it. If not, double click the node to open its settings, then click the pencil icon next to the server input, then go to the security tab and make sure the username and password is entered for the MQTT broker.\n\n## Setting up your VizBlock\n\nIn order for a the vizblock to work with this remote server, you will need configure the VizBlock (using Arduino code) so that it:\n- a) connects to a WiFi network with internet access.\n- b) connects to the remote MQTT server.\n\nYou can do this by editing the block configuration in the following lines:\n\n```\nVizBlock node(\n  \"null\",       // Our ID\n  \"<wifi_net>\",  //Wifi Access Point\n  \"<wifi_password>\",  //WiFi Password\n  \"vizblocks-server.creativeinformatics.org\",//IP address of Node RED server\n   8883,         //Port for Node RED server\n   \"<mqtt_user>\",  //MQTT username\n   \"<mqtt_password>\",    //MQTT password\n   \"<F7:AD:10:85:97:1E:F8:68:08:17:A3:DC:68:F9:C3:42:DE:C9:A3:F8>\" // SHA1 fingerprint (for mqtt server)\n  );\n```\n\nReplace all of the settings in `<>` with your values (or those provided to you). To get the SHA1 fingerprint you can use the following command (on Mac/Linux):\n\n```bash\nopenssl s_client -connect vizblocks-server.creativeinformatics.org:8883 < /dev/null 2>/dev/null | openssl x509 -fingerprint -noout -in /dev/stdin\n```\n\n## Running a test\nDouble click on the blue input node to open its setting tab, then enter the command you'd like to send to the VizBlock in the `msg.payload` field.\n\nDouble click on the purple MQTT node and enter the name of the VizBlock you'd like to control in the Topic field.\n\nClick **Deploy** in the top right corner, then click the button to the right of the input node to send commands to your VizBlock.","x":440,"y":60,"wires":[]}]